{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerGroupName": {
      "type": "string",
      "defaultValue": "onetech-backend",
      "metadata": {
        "description": "Name for the container group"
      }
    },
    "containerImageName": {
      "type": "string",
      "metadata": {
        "description": "Container image name (e.g., your-registry.azurecr.io/onetech-backend:latest)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "registryServer": {
      "type": "string",
      "metadata": {
        "description": "Container registry server (e.g., your-registry.azurecr.io)"
      }
    },
    "registryUsername": {
      "type": "string",
      "metadata": {
        "description": "Container registry username"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Container registry password"
      }
    },
    "djangoSecretKey": {
      "type": "securestring",
      "metadata": {
        "description": "Django secret key"
      }
    },
    "googleApiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Google API key for Gemini"
      }
    },
    "debug": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [
        "true",
        "false"
      ],
      "metadata": {
        "description": "Enable Django debug mode"
      }
    }
  },
  "variables": {
    "containerName": "onetech-backend-container"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2021-09-01",
      "name": "[parameters('containerGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "containers": [
          {
            "name": "[variables('containerName')]",
            "properties": {
              "image": "[parameters('containerImageName')]",
              "ports": [
                {
                  "port": 8000,
                  "protocol": "TCP"
                }
              ],
              "environmentVariables": [
                {
                  "name": "DJANGO_SECRET_KEY",
                  "secureValue": "[parameters('djangoSecretKey')]"
                },
                {
                  "name": "DEBUG",
                  "value": "[parameters('debug')]"
                },
                {
                  "name": "GOOGLE_API_KEY",
                  "secureValue": "[parameters('googleApiKey')]"
                },
                {
                  "name": "GEMINI_MODEL",
                  "value": "gemini-2.5-pro"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 1.0,
                  "memoryInGB": 2.0
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "Always",
        "imageRegistryCredentials": [
          {
            "server": "[parameters('registryServer')]",
            "username": "[parameters('registryUsername')]",
            "password": "[parameters('registryPassword')]"
          }
        ],
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "port": 8000,
              "protocol": "TCP"
            }
          ],
          "dnsNameLabel": "[concat(parameters('containerGroupName'), '-', uniqueString(resourceGroup().id))]"
        }
      }
    }
  ],
  "outputs": {
    "containerIPv4Address": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('containerGroupName'))).ipAddress.ip]"
    },
    "containerFQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('containerGroupName'))).ipAddress.fqdn]"
    }
  }
}
